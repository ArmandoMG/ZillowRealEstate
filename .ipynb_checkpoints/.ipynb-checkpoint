{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Importing the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset = pd.read_csv('properties.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>address</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>postal_code</th>\n",
       "      <th>price</th>\n",
       "      <th>facts and features</th>\n",
       "      <th>real estate provider</th>\n",
       "      <th>url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>94102</td>\n",
       "      <td>$785,000</td>\n",
       "      <td>1 bds, 1.0 ba ,605 sqft</td>\n",
       "      <td>NaN</td>\n",
       "      <td>https://www.zillow.com/homedetails/8-Buchanan-...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>94102</td>\n",
       "      <td>$1,495,000</td>\n",
       "      <td>2 bds, 2.0 ba ,1155 sqft</td>\n",
       "      <td>Sotheby's International Realty</td>\n",
       "      <td>https://www.zillow.com/homedetails/301-Gough-S...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>New construction</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>94102</td>\n",
       "      <td>$739,000+</td>\n",
       "      <td>1 bds, 1.0 ba ,568 sqft</td>\n",
       "      <td>NaN</td>\n",
       "      <td>https://www.zillow.com/community/elevant/20766...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>94102</td>\n",
       "      <td>$20,000,000</td>\n",
       "      <td>None bds, None ba ,26152 sqft</td>\n",
       "      <td>NaN</td>\n",
       "      <td>https://www.zillow.com/homedetails/435-Powell-...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>94102</td>\n",
       "      <td>$2,500,000</td>\n",
       "      <td>4 bds, 3.0 ba ,4200 sqft</td>\n",
       "      <td>Compass</td>\n",
       "      <td>https://www.zillow.com/homedetails/176-Page-St...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              title  address           city state  postal_code         price  \\\n",
       "0    Condo for sale      NaN  San Francisco    CA        94102     $785,000    \n",
       "1    Condo for sale      NaN  San Francisco    CA        94102   $1,495,000    \n",
       "2  New construction      NaN  San Francisco    CA        94102     $739,000+   \n",
       "3    House for sale      NaN  San Francisco    CA        94102  $20,000,000    \n",
       "4    House for sale      NaN  San Francisco    CA        94102   $2,500,000    \n",
       "\n",
       "              facts and features            real estate provider  \\\n",
       "0        1 bds, 1.0 ba ,605 sqft                             NaN   \n",
       "1       2 bds, 2.0 ba ,1155 sqft  Sotheby's International Realty   \n",
       "2        1 bds, 1.0 ba ,568 sqft                             NaN   \n",
       "3  None bds, None ba ,26152 sqft                             NaN   \n",
       "4       4 bds, 3.0 ba ,4200 sqft                         Compass   \n",
       "\n",
       "                                                 url  \n",
       "0  https://www.zillow.com/homedetails/8-Buchanan-...  \n",
       "1  https://www.zillow.com/homedetails/301-Gough-S...  \n",
       "2  https://www.zillow.com/community/elevant/20766...  \n",
       "3  https://www.zillow.com/homedetails/435-Powell-...  \n",
       "4  https://www.zillow.com/homedetails/176-Page-St...  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since addres is all none and we already know from definition that every observation is from San Francisco, CA. We might as well exclude all of that"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset=dataset.drop(['address','city','state'],axis=1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Also, we want to split 'facts and features' into 3 different columns: Beds, Baths, and SQ Feet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#We rename 'facts and features column' to 'beds' and 'real estate provider' to 'provider'...\n",
    "dataset = dataset.rename(columns={'facts and features': 'beds', 'real estate provider': 'provider'})\n",
    "#We split the newly renamed 'beds' column into 'beds','baths','sq_feet'\n",
    "dataset[['beds','baths','sq_feet']] = dataset.beds.str.split(\",\",expand=True)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's organize the format of our dataset and drop the URL column, since it doesnt provide anything useful for the EDA nor the modeling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#We organize the format of our dataset\n",
    "dataset=dataset[['url','title','postal_code','provider','beds','baths','sq_feet','price']]\n",
    "dataset=dataset.drop(['url'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>postal_code</th>\n",
       "      <th>provider</th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>sq_feet</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 bds</td>\n",
       "      <td>1.0 ba</td>\n",
       "      <td>605 sqft</td>\n",
       "      <td>$785,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Sotheby's International Realty</td>\n",
       "      <td>2 bds</td>\n",
       "      <td>2.0 ba</td>\n",
       "      <td>1155 sqft</td>\n",
       "      <td>$1,495,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>New construction</td>\n",
       "      <td>94102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 bds</td>\n",
       "      <td>1.0 ba</td>\n",
       "      <td>568 sqft</td>\n",
       "      <td>$739,000+</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None bds</td>\n",
       "      <td>None ba</td>\n",
       "      <td>26152 sqft</td>\n",
       "      <td>$20,000,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Compass</td>\n",
       "      <td>4 bds</td>\n",
       "      <td>3.0 ba</td>\n",
       "      <td>4200 sqft</td>\n",
       "      <td>$2,500,000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              title  postal_code                        provider      beds  \\\n",
       "0    Condo for sale        94102                             NaN     1 bds   \n",
       "1    Condo for sale        94102  Sotheby's International Realty     2 bds   \n",
       "2  New construction        94102                             NaN     1 bds   \n",
       "3    House for sale        94102                             NaN  None bds   \n",
       "4    House for sale        94102                         Compass     4 bds   \n",
       "\n",
       "       baths     sq_feet         price  \n",
       "0    1.0 ba     605 sqft     $785,000   \n",
       "1    2.0 ba    1155 sqft   $1,495,000   \n",
       "2    1.0 ba     568 sqft     $739,000+  \n",
       "3   None ba   26152 sqft  $20,000,000   \n",
       "4    3.0 ba    4200 sqft   $2,500,000   "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1077 entries, 0 to 1076\n",
      "Data columns (total 7 columns):\n",
      " #   Column       Non-Null Count  Dtype \n",
      "---  ------       --------------  ----- \n",
      " 0   title        1077 non-null   object\n",
      " 1   postal_code  1077 non-null   int64 \n",
      " 2   provider     891 non-null    object\n",
      " 3   beds         1077 non-null   object\n",
      " 4   baths        1077 non-null   object\n",
      " 5   sq_feet      1077 non-null   object\n",
      " 6   price        1077 non-null   object\n",
      "dtypes: int64(1), object(6)\n",
      "memory usage: 59.0+ KB\n"
     ]
    }
   ],
   "source": [
    "#Check for nulls\n",
    "dataset.isnull().sum()\n",
    "dataset.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From this past runs we observe 2 important things\n",
    " * 'provider' have 186 null values, so we'll have to deal with that later\n",
    " * 'beds', 'baths', 'sq_feet', and 'price' columns are type object, so we might as well see why...\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['605 sqft' '1155 sqft' '568 sqft' '26152 sqft' '4200 sqft' '6330 sqft'\n",
      " '1092 sqft' '836 sqft' '798 sqft' '536 sqft' '1219 sqft' '525 sqft'\n",
      " '1099 sqft' '716 sqft' '708 sqft' '556 sqft' '712 sqft' '1360 sqft'\n",
      " '2200 sqft' '719 sqft' '977 sqft' '804 sqft' '1121 sqft' '709 sqft'\n",
      " '3816 sqft' '920 sqft' '4440 sqft' 'None sqft' '1131 sqft' '398 sqft'\n",
      " '500 sqft' '2655 sqft' '518 sqft' '705 sqft' '652 sqft' '753 sqft'\n",
      " '674 sqft' '682 sqft' '2485 sqft' '1510 sqft' '565 sqft' '806 sqft'\n",
      " '1431 sqft' '1290 sqft' '658 sqft' '1565 sqft' '541 sqft' '955 sqft'\n",
      " '844 sqft' '1547 sqft' '3598 sqft' '815 sqft' '795 sqft' '1470 sqft'\n",
      " '981 sqft' '690 sqft' '1319 sqft' '1264 sqft' '298 sqft' '2018 sqft'\n",
      " '976 sqft' '1250 sqft' '888 sqft' '1894 sqft' '925 sqft' '529 sqft'\n",
      " '626 sqft' '664 sqft' '644 sqft' '862 sqft' '341 sqft' '875 sqft'\n",
      " '494 sqft' '4875 sqft' '932 sqft' '739 sqft' '589 sqft' '1173 sqft'\n",
      " '745 sqft' '1201 sqft' '1259 sqft' '1491 sqft' '476 sqft' '694 sqft'\n",
      " '1268 sqft' '995 sqft' '2559 sqft' '1354 sqft' '1215 sqft' '851 sqft'\n",
      " '1515 sqft' '710 sqft' '2130 sqft' '671 sqft' '1457 sqft' '1177 sqft'\n",
      " '1845 sqft' '5223 sqft' '498 sqft' '1401 sqft' '1097 sqft' '916 sqft'\n",
      " '909 sqft' '1422 sqft' '493 sqft' '669 sqft' '486 sqft' '432 sqft'\n",
      " '1019 sqft' '733 sqft' '840 sqft' '873 sqft' '1434 sqft' '1637 sqft'\n",
      " '789 sqft' '16000 sqft' '3774 sqft' '4175 sqft' '1940 sqft' '9450 sqft'\n",
      " '1128 sqft' '2442 sqft' '670 sqft' '1124 sqft' '2100 sqft' '913 sqft'\n",
      " '2073 sqft' '2260 sqft' '7195 sqft' '5890 sqft' '1717 sqft' '684 sqft'\n",
      " '1562 sqft' '3137 sqft' '697 sqft' '2529 sqft' '4206 sqft' '6324 sqft'\n",
      " '3274 sqft' '5142 sqft' '1320 sqft' '3276 sqft' '1044 sqft' '3107 sqft'\n",
      " '4188 sqft' '3111 sqft' '1595 sqft' '3037 sqft' '1200 sqft' '721 sqft'\n",
      " '4004 sqft' '1006 sqft' '700 sqft' '653 sqft' '732 sqft' '852 sqft'\n",
      " '616 sqft' '910 sqft' '1032 sqft' '1258 sqft' '1532 sqft' '2112 sqft'\n",
      " '1030 sqft' '1569 sqft' '1475 sqft' '1642 sqft' '1382 sqft' '1297 sqft'\n",
      " '3250 sqft' '1605 sqft' '1763 sqft' '1003 sqft' '660 sqft' '860 sqft'\n",
      " '2596 sqft' '887 sqft' '866 sqft' '3227 sqft' '1622 sqft' '1789 sqft'\n",
      " '1175 sqft' '1424 sqft' '935 sqft' '1238 sqft' '1393 sqft' '1416 sqft'\n",
      " '2640 sqft' '1764 sqft' '984 sqft' '1068 sqft' '1628 sqft' '1073 sqft'\n",
      " '2122 sqft' '990 sqft' '2610 sqft' '807 sqft' '1396 sqft' '5084 sqft'\n",
      " '1891 sqft' '2321 sqft' '1881 sqft' '2888 sqft' '5137 sqft' '1015 sqft'\n",
      " '570 sqft' '1351 sqft' '3200 sqft' '1513 sqft' '1211 sqft' '2450 sqft'\n",
      " '1375 sqft' '810 sqft' '740 sqft' '1303 sqft' '2549 sqft' '1582 sqft'\n",
      " '3271 sqft' '5180 sqft' '3445 sqft' '2680 sqft' '1172 sqft' '1496 sqft'\n",
      " '1770 sqft' '2117 sqft' '1332 sqft' '2220 sqft' '3400 sqft' '550 sqft'\n",
      " '1120 sqft' '2291 sqft' '2700 sqft' '1100 sqft' '2233 sqft' '4893 sqft'\n",
      " '2330 sqft' '4545 sqft' '8930 sqft' '2025 sqft' '3632 sqft' '1046 sqft'\n",
      " '1600 sqft' '2620 sqft' '3550 sqft' '950 sqft' '5876 sqft' '10040 sqft'\n",
      " '4609 sqft' '5640 sqft' '3635 sqft' '13252 sqft' '3118 sqft' '1233 sqft'\n",
      " '1961 sqft' '2780 sqft' '7928 sqft' '353 sqft' '366 sqft' '750 sqft'\n",
      " '1056 sqft' '1428 sqft' '2412 sqft' '900 sqft' '2571 sqft' '437 sqft'\n",
      " '3465 sqft' '1399 sqft' '2027 sqft' '1729 sqft' '4822 sqft' '3600 sqft'\n",
      " '411 sqft' '2454 sqft' '354 sqft' '1520 sqft' '592 sqft' '835 sqft'\n",
      " '515 sqft' '1191 sqft' '1347 sqft' '5247 sqft' '368 sqft' '1892 sqft'\n",
      " '1560 sqft' '788 sqft' '1234 sqft' '908 sqft' '1442 sqft' '814 sqft'\n",
      " '1083 sqft' '896 sqft' '1230 sqft' '485 sqft' '680 sqft' '924 sqft'\n",
      " '964 sqft' '5040 sqft' '691 sqft' '1225 sqft' '1344 sqft' '503 sqft'\n",
      " '580 sqft' '1719 sqft' '989 sqft' '617 sqft' '620 sqft' '566 sqft'\n",
      " '1423 sqft' '1026 sqft' '1466 sqft' '2753 sqft' '2444 sqft' '1660 sqft'\n",
      " '2760 sqft' '2250 sqft' '4040 sqft' '2050 sqft' '2344 sqft' '850 sqft'\n",
      " '1995 sqft' '1278 sqft' '2083 sqft' '1820 sqft' '2300 sqft' '2290 sqft'\n",
      " '2337 sqft' '3092 sqft' '1400 sqft' '11146 sqft' '10641 sqft' '2785 sqft'\n",
      " '1387 sqft' '1903 sqft' '1469 sqft' '2661 sqft' '1726 sqft' '2136 sqft'\n",
      " '1518 sqft' '1450 sqft' '842 sqft' '2011 sqft' '6350 sqft' '2625 sqft'\n",
      " '1990 sqft' '1300 sqft' '1162 sqft' '2262 sqft' '1075 sqft' '1570 sqft'\n",
      " '2636 sqft' '993 sqft' '1058 sqft' '5990 sqft' '1713 sqft' '1975 sqft'\n",
      " '4374 sqft' '4585 sqft' '2589 sqft' '1334 sqft' '1997 sqft' '3000 sqft'\n",
      " '3275 sqft' '805 sqft' '1630 sqft' '479 sqft' '1500 sqft' '629 sqft'\n",
      " '812 sqft' '4500 sqft' '1110 sqft' '775 sqft' '743 sqft' '1065 sqft'\n",
      " '1402 sqft' '816 sqft' '5235 sqft' '834 sqft' '2627 sqft' '1326 sqft'\n",
      " '998 sqft' '4940 sqft' '632 sqft' '624 sqft' '1248 sqft' '3456 sqft'\n",
      " '532 sqft' '8895 sqft' '2076 sqft' '625 sqft' '1323 sqft' '3160 sqft'\n",
      " '800 sqft' '2353 sqft' '1762 sqft' '2576 sqft' '1687 sqft' '1036 sqft'\n",
      " '3371 sqft' '1859 sqft' '1005 sqft' '3860 sqft' '2728 sqft' '2075 sqft'\n",
      " '1675 sqft' '2893 sqft' '5400 sqft' '3003 sqft' '2128 sqft' '2500 sqft'\n",
      " '1528 sqft' '1682 sqft' '1458 sqft' '1273 sqft' '1312 sqft' '1014 sqft'\n",
      " '4538 sqft' '3870 sqft' '1857 sqft' '5280 sqft' '4754 sqft' '922 sqft'\n",
      " '15140 sqft' '2003 sqft' '2400 sqft' '5889 sqft' '829 sqft' '1204 sqft'\n",
      " '1556 sqft' '1076 sqft' '2900 sqft' '5655 sqft' '4320 sqft' '2874 sqft'\n",
      " '1804 sqft' '16830 sqft' '1823 sqft' '2378 sqft' '2000 sqft' '4315 sqft'\n",
      " '1193 sqft' '590 sqft' '790 sqft' '1706 sqft' '4678 sqft' '5175 sqft'\n",
      " '2750 sqft' '2067 sqft' '2133 sqft' '2747 sqft' '1214 sqft' '1755 sqft'\n",
      " '1758 sqft' '1912 sqft' '943 sqft' '3100 sqft' '1819 sqft' '2356 sqft'\n",
      " '2214 sqft' '2790 sqft' '2597 sqft' '3098 sqft' '1835 sqft' '1800 sqft'\n",
      " '2410 sqft' '3029 sqft' '1950 sqft' '2775 sqft' '4045 sqft' '2269 sqft'\n",
      " '3242 sqft' '4485 sqft' '4861 sqft' '7170 sqft' '3420 sqft' '1555 sqft'\n",
      " '1840 sqft' '3340 sqft' '6045 sqft' '9240 sqft' '3395 sqft' '4210 sqft'\n",
      " '10825 sqft' '1900 sqft' '3257 sqft' '2580 sqft' '1568 sqft' '1908 sqft'\n",
      " '1543 sqft' '2723 sqft' '3915 sqft' '7845 sqft' '1850 sqft' '1890 sqft'\n",
      " '609 sqft' '3590 sqft' '2902 sqft' '2506 sqft' '817 sqft' '1409 sqft'\n",
      " '1522 sqft' '1020 sqft' '3206 sqft' '1080 sqft' '1256 sqft' '2614 sqft'\n",
      " '613 sqft' '841 sqft' '1086 sqft' '1527 sqft' '1034 sqft' '973 sqft'\n",
      " '2908 sqft' '546 sqft' '2169 sqft' '1821 sqft' '1283 sqft' '1580 sqft'\n",
      " '1567 sqft' '1594 sqft' '1115 sqft' '1112 sqft' '1010 sqft' '3050 sqft'\n",
      " '3115 sqft' '1612 sqft' '1342 sqft' '1589 sqft' '886 sqft' '1639 sqft'\n",
      " '2805 sqft' '1635 sqft' '1249 sqft' '3030 sqft' '2215 sqft' '830 sqft'\n",
      " '1143 sqft' '2120 sqft' '7060 sqft' '2138 sqft' '1345 sqft' '2104 sqft'\n",
      " '1482 sqft' '474 sqft' '9544 sqft' '3637 sqft' '1740 sqft' '6230 sqft'\n",
      " '2060 sqft' '4130 sqft' '986 sqft' '1313 sqft' '2952 sqft' '3640 sqft'\n",
      " '2165 sqft' '3182 sqft' '4400 sqft' '10875 sqft' '15039 sqft' '5775 sqft'\n",
      " '1970 sqft' '1715 sqft' '2090 sqft' '2179 sqft' '1392 sqft' '1484 sqft'\n",
      " '1772 sqft' '839 sqft' '1550 sqft' '3440 sqft' '4215 sqft' '3713 sqft'\n",
      " '3240 sqft' '5298 sqft' '3164 sqft' '2794 sqft' '2429 sqft' '1033 sqft'\n",
      " '2363 sqft' '3500 sqft' '1749 sqft' '1839 sqft' '2223 sqft' '1384 sqft'\n",
      " '1828 sqft' '1260 sqft' '1474 sqft' '1438 sqft' '1492 sqft' '2435 sqft'\n",
      " '1156 sqft' '856 sqft' '1160 sqft' '728 sqft' '880 sqft' '1372 sqft'\n",
      " '1208 sqft' '1216 sqft' '1780 sqft' '1827 sqft' '783 sqft' '538 sqft'\n",
      " '1723 sqft' '767 sqft' '917 sqft' '1720 sqft']\n",
      "604\n",
      "['1 bds' '2 bds' 'None bds' '4 bds' '8 bds' '0 bds' '3 bds' '6 bds'\n",
      " '10 bds' '9 bds' '12 bds' '7 bds' '5 bds' '20 bds' '18 bds' '13 bds'\n",
      " '11 bds' '23 bds' '16 bds' '84 bds']\n",
      "20\n",
      "[' 1.0 ba ' ' 2.0 ba ' ' None ba ' ' 3.0 ba ' ' 6.0 ba ' ' 4.0 ba '\n",
      " ' 11.0 ba ' ' 5.0 ba ' ' 7.0 ba ' ' 8.0 ba ' ' 13.0 ba ']\n",
      "11\n",
      "['$785,000 ' '$1,495,000 ' '$739,000+' '$20,000,000 ' '$2,500,000 '\n",
      " '$3,800,000 ' '$1,199,000+' '$1,099,000+' '$1,047,000+' '$599,000+'\n",
      " '$1,199,000 ' '$615,000 ' '$939,000 ' '$745,000 ' '$719,000+' '$495,000 '\n",
      " '$1,650,000 ' '$1,500,000 ' '$999,000+' '$998,000 ' '$999,000 '\n",
      " '$1,499,000 ' '$679,000 ' '$3,290,000 ' '$649,000 ' '$2,995,000 '\n",
      " '$690,000 ' '$449,000 ' '$2,880,000 ' '$460,000 ' '$799,000+' '$549,000 '\n",
      " '$849,000 ' '$382,521 ' '$670,000 ' '$1,595,000 ' '$948,000 '\n",
      " '$1,599,000 ' '$995,000 ' '$749,000 ' '$1,195,000 ' '$595,000 '\n",
      " '$700,000 ' '$949,000 ' '$1,349,000 ' '$1,995,000 ' '$895,000 '\n",
      " '$685,000 ' '$1,373,000+' '$789,000+' '$1,175,000 ' '$1,400,000 '\n",
      " '$378,000 ' '$699,000 ' '$1,695,000 ' '$1,171,000+' '$1,150,000 '\n",
      " '$938,000 ' '$710,000 ' '$825,000+' '$775,000 ' '$1,485,000 ' '$420,000 '\n",
      " '$2,400,000 ' '$431,846 ' '$799,000 ' '$875,000 ' '$1,275,000 '\n",
      " '$1,649,000 ' '$2,599,000 ' '$2,200,000 ' '$6,895,000+' '$1,588,000 '\n",
      " '$1,050,000 ' '$1,299,000 ' '$1,095,000 ' '$1,850,000+' '$825,000 '\n",
      " '$3,295,000 ' '$795,000+' '$1,695,000+' '$1,159,000 ' '$1,475,000 '\n",
      " '$1,925,000 ' '$5,995,000 ' '$1,098,000 ' '$610,000 ' '$1,495,000+'\n",
      " '$1,180,000 ' '$1,100,000 ' '$599,000 ' '$798,000 ' '$639,000 '\n",
      " '$1,295,000 ' '$850,000 ' '$915,000 ' '$1,729,000 ' '$925,000 '\n",
      " '$21,000,000 ' '$3,750,000 ' '$2,250,000 ' '$7,250,000 ' '$5,500,000+'\n",
      " '$7,600,000 ' '$1,250,000 ' '$2,295,000 ' '$1,950,000+' '$2,497,000 '\n",
      " '$1,450,000+' '$3,125,000 ' '$2,598,000 ' '$14,500,000 ' '$5,500,000 '\n",
      " '$899,000 ' '$4,380,000 ' '$4,500,000 ' '$3,150,000 ' '$6,500,000 '\n",
      " '$4,000,000 ' '$3,700,000 ' '$13,999,000 ' '$1,395,000 ' '$3,795,000 '\n",
      " '$2,495,000 ' '$3,600,000 ' '$1,795,000 ' '$2,645,000 ' '$1,049,000 '\n",
      " '$4,698,000 ' '$960,000 ' '$789,000 ' '$848,000 ' '$1,450,000 '\n",
      " '$1,895,000 ' '$2,698,888 ' '$1,245,000 ' '$950,000 ' '$2,189,000 '\n",
      " '$1,799,000 ' '$1,099,000 ' '$839,000 ' '$898,000 ' '$1,550,000 '\n",
      " '$1,440,900+' '$998,889 ' '$974,000 ' '$888,888 ' '$1,250,900+'\n",
      " '$1,499,900+' '$698,000 ' '$1,120,952 ' '$1,395,900+' '$738,000 '\n",
      " '$1,448,888 ' '$1,350,000 ' '$795,000 ' '$399,998 ' '$1,888,000 '\n",
      " '$1,849,000 ' '$2,149,000 ' '$5,800,000 ' '$4,995,000 ' '$499,000 '\n",
      " '$979,000 ' '$5,895,000 ' '$1,325,000 ' '$1,680,000 ' '$2,999,000 '\n",
      " '$1,177,000 ' '$343,558 ' '$1,200,000 ' '$2,290,000 ' '$1,635,000 '\n",
      " '$3,999,000 ' '$7,950,000 ' '$3,499,000 ' '$4,695,000 ' '$674,000 '\n",
      " '$1,170,000 ' '$1,645,000 ' '$2,690,000 ' '$630,000 ' '$3,250,000 '\n",
      " '$1,001,150 ' '$1,950,000 ' '$838,000 ' '$2,000,000 ' '$25,000,000 '\n",
      " '$2,595,000 ' '$2,450,000 ' '$2,095,000 ' '$1,068,000 ' '$1,398,000 '\n",
      " '$4,200,000 ' '$2,850,000 ' '$4,900,000 ' '$8,495,000 ' '$1,999,000 '\n",
      " '$3,595,000 ' '$2,150,000 ' '$7,700,000 ' '$1,690,000 ' '$575,000 '\n",
      " '$3,195,000 ' '$6,950,000 ' '$7,500,000 ' '$4,080,000 ' '$515,000 '\n",
      " '$508,000 ' '$719,000 ' '$3,200,000 ' '$545,000 ' '$3,450,000 '\n",
      " '$2,525,000 ' '$8,250,000 ' '$2,480,000 ' '$2,800,000 ' '$1,875,000 '\n",
      " '$645,000 ' '$975,000 ' '$1,049,000+' '$740,000+' '$2,549,000 '\n",
      " '$298,000 ' '$2,399,000 ' '$1,395,000+' '$989,000+' '$1,589,000 '\n",
      " '$1,388,000+' '$898,888 ' '$1,239,000 ' '$263,033 ' '$935,000+'\n",
      " '$648,000+' '$1,190,000 ' '$1,249,000 ' '$569,000 ' '$552,000 '\n",
      " '$12,000,000 ' '$5,000,000 ' '$634,500 ' '$529,000 ' '$1,669,000 '\n",
      " '$520,000 ' '$589,000 ' '$555,000 ' '$959,000 ' '$399,000 ' '$1,000,000 '\n",
      " '$2,249,000 ' '$1,388,000 ' '$559,000 ' '$1,399,000 ' '$2,228,988 '\n",
      " '$999,918 ' '$1,725,000 ' '$1,285,000 ' '$989,000 ' '$4,988,000 '\n",
      " '$3,895,000 ' '$879,000 ' '$1,389,500 ' '$1,080,000 ' '$1,189,000 '\n",
      " '$1,499,999 ' '$2,325,000 ' '$759,000 ' '$2,600,000 ' '$1,498,000 '\n",
      " '$1,750,000 ' '$865,000 ' '$3,690,000 ' '$3,000,000 ' '$1,298,000 '\n",
      " '$356,509 ' '$828,000 ' '$2,195,000 ' '$6,795,000 ' '$688,000 '\n",
      " '$2,050,000 ' '$1,699,000 ' '$2,950,000 ' '$399,273 ' '$4,895,000 '\n",
      " '$1,497,000 ' '$1,850,000 ' '$4,395,000 ' '$2,275,000 ' '$1,375,000 '\n",
      " '$2,750,000 ' '$888,000 ' '$3,995,000 ' '$2,395,000 ' '$4,849,000 '\n",
      " '$1,300,000 ' '$1,998,000 ' '$1,825,000 ' '$750,000 ' '$5,495,000 '\n",
      " '$1,449,500 ' '$2,795,000 ' '$7,199,000 ' '$899,900 ' '$3,495,000 '\n",
      " '$2,990,000 ' '$3,675,000 ' '$6,300,000 ' '$2,650,000 ' '$1,390,000 '\n",
      " '$2,898,000 ' '$859,000 ' '$3,650,000 ' '$2,675,000 ' '$1,800,000 '\n",
      " '$1,138,000 ' '$1,798,000 ' '$1,698,000 ' '$1,489,000 ' '$980,000 '\n",
      " '$1,899,000 ' '$2,180,000 ' '$1,425,000 ' '$1,720,000 ' '$2,100,000 '\n",
      " '$4,144,000 ' '$1,125,000 ' '$2,980,000 ' '$4,850,000 ' '$17,500,000 '\n",
      " '$7,999,000 ' '$3,498,000 ' '$4,600,000 ' '$2,590,000 ' '$1,299,990 '\n",
      " '$2,280,000 ' '$3,960,000 ' '$1,424,000 ' '$1,999,999 ' '$4,300,000 '\n",
      " '$1,488,888 ' '$1,538,000 ' '$2,610,000 ' '$1,988,000 ' '$1,890,000 '\n",
      " '$680,000 ' '$1,179,000+' '$1,210,000+' '$869,000+' '$899,000+'\n",
      " '$1,190,000+' '$880,000+' '$965,000+' '$659,000+' '$1,210,000 '\n",
      " '$798,888 ' '$879,000+' '$799,900 ' '$240,000 ' '$350,000 ' '$1,284,000 '\n",
      " '$929,000 ' '$541,250 ' '$799,999 ' '$650,000 ' '$1,788,000 '\n",
      " '$1,580,000 ' '$2,375,000 ' '$2,099,000 ' '$3,550,000 ' '$1,625,000 '\n",
      " '$435,000 ' '$6,995,000 ' '$5,300,000 ' '$725,000 ' '$1,488,000 '\n",
      " '$2,700,000 ' '$2,699,888 ' '$4,999,888 ' '$7,995,000 ' '$6,385,000 '\n",
      " '$2,430,000 ' '$10,000,000 ' '$2,575,000 ' '$1,225,000 ' '$1,600,000 '\n",
      " '$3,880,000 ' '$2,198,000 ' '$3,850,000 ' '$7,659,888 ' '$250,000 '\n",
      " '$835,000 ' '$990,000 ' '$1,469,000 ' '$1,439,000 ' '$1,455,000 '\n",
      " '$1,088,888 ' '$1,738,888 ' '$1,829,000 ' '$1,525,000 ' '$1,038,000 '\n",
      " '$1,160,000 ' '$820,000 ' '$1,687,500 ' '$2,998,000 ' '$533,786 '\n",
      " '$1,028,000 ']\n",
      "406\n"
     ]
    }
   ],
   "source": [
    "#Lets check this 4 columns\n",
    "print(dataset['sq_feet'].unique())\n",
    "print(len(dataset['sq_feet'].unique()))\n",
    "\n",
    "print(dataset['beds'].unique())\n",
    "print(len(dataset['beds'].unique()))\n",
    "\n",
    "print(dataset['baths'].unique())\n",
    "print(len(dataset['baths'].unique()))\n",
    "\n",
    "print(dataset['price'].unique())\n",
    "print(len(dataset['price'].unique()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From this, we can see that these 4 columns have special charactes ('+' , ',', '$') and letters as units (bd, ba, sq_feets).\n",
    "Also, and important thing to note is that there are \"None\" values.\n",
    "\n",
    "Basically, we observe 3 important things\n",
    " * There are 'None' Values that represent 0 in both 'beds' and 'baths' columns\n",
    " * There are commas in the 'price' column\n",
    " * There are letter or special characters in all of the three columns, we only want numbers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "#First, lets deal with point No.1 and replace 'bds', 'ba', and 'sq_feet' unit for blank spaces and 'None' for just 0\n",
    "dataset['beds'] = dataset['beds'].str.replace('bds','')\n",
    "dataset['beds'] = dataset['beds'].str.replace('None','0')\n",
    "\n",
    "dataset['baths'] = dataset['baths'].str.replace('ba','')\n",
    "dataset['baths'] = dataset['baths'].str.replace('None','0')\n",
    "\n",
    "dataset['sq_feet'] = dataset['sq_feet'].str.replace('sqft','')\n",
    "dataset['sq_feet'] = dataset['sq_feet'].str.replace('None','0')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "#lets go with point  2 and 3 on the list, replacing the non-numeric characters in 'price'\n",
    "dataset['price'] = dataset['price'].str.replace('+','')\n",
    "dataset['price'] = dataset['price'].str.replace('$','')\n",
    "dataset['price'] = dataset['price'].str.replace(',','')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After this, we have to take care of 0s in the dataset. For example, 0 beds, 0 baths, 0 sq_feet, $1,000,000 its a possible observation but its clearly impossible. \n",
    "\n",
    "This may happen because of human error, the person who published the house in zillow might've forgotten this or just a simple typo.\n",
    "\n",
    "The way Im going to deal with this is by replacing the 0s by mode and mean."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset['beds'] = dataset['beds'].str.replace('0',dataset['beds'].mode()[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>postal_code</th>\n",
       "      <th>provider</th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>sq_feet</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>605</td>\n",
       "      <td>785000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Sotheby's International Realty</td>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1155</td>\n",
       "      <td>1495000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>New construction</td>\n",
       "      <td>94102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>568</td>\n",
       "      <td>739000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>26152</td>\n",
       "      <td>20000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Compass</td>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4200</td>\n",
       "      <td>2500000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              title  postal_code                        provider beds   baths  \\\n",
       "0    Condo for sale        94102                             NaN   1    1.0     \n",
       "1    Condo for sale        94102  Sotheby's International Realty   2    2.0     \n",
       "2  New construction        94102                             NaN   1    1.0     \n",
       "3    House for sale        94102                             NaN  2       0     \n",
       "4    House for sale        94102                         Compass   4    3.0     \n",
       "\n",
       "  sq_feet      price  \n",
       "0    605     785000   \n",
       "1   1155    1495000   \n",
       "2    568      739000  \n",
       "3  26152   20000000   \n",
       "4   4200    2500000   "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset[\"beds\"] = pd.to_numeric(dataset[\"beds\"], downcast=\"float\")\n",
    "dataset[\"baths\"] = pd.to_numeric(dataset[\"baths\"], downcast=\"float\")\n",
    "dataset[\"sq_feet\"] = pd.to_numeric(dataset[\"sq_feet\"], downcast=\"float\")\n",
    "dataset[\"price\"] = pd.to_numeric(dataset[\"price\"], downcast=\"float\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1077 entries, 0 to 1076\n",
      "Data columns (total 7 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   title        1077 non-null   object \n",
      " 1   postal_code  1077 non-null   int64  \n",
      " 2   provider     891 non-null    object \n",
      " 3   beds         1077 non-null   float32\n",
      " 4   baths        1077 non-null   float32\n",
      " 5   sq_feet      1077 non-null   float32\n",
      " 6   price        1077 non-null   float32\n",
      "dtypes: float32(4), int64(1), object(2)\n",
      "memory usage: 42.2+ KB\n"
     ]
    }
   ],
   "source": [
    "dataset.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset['baths'] = dataset['baths'].replace(0.0,dataset['baths'].mode()[0])\n",
    "dataset['sq_feet'] = dataset['sq_feet'].replace(0.0,dataset['sq_feet'].mean())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**NOTE: THE METHOD THAT I USED FOR DEALING WITH THE 0s COULD BE IMPROVE BY REPLACING WITH THE MODE OF EACH POSTAL CODE**\n",
    "\n",
    "\n",
    "**NOTE 2: DOING THIS IMPROVES THE MODEL AROUND 0.5%**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have replace, changed, and clean almost everything, lets take a look"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>postal_code</th>\n",
       "      <th>provider</th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>sq_feet</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Sotheby's International Realty</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1155.0</td>\n",
       "      <td>1495000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Compass</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4200.0</td>\n",
       "      <td>2500000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Compass</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6330.0</td>\n",
       "      <td>3800000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Compass SF</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1219.0</td>\n",
       "      <td>1199000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Keller Williams San Francisco</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>525.0</td>\n",
       "      <td>615000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             title  postal_code                        provider  beds  baths  \\\n",
       "1   Condo for sale        94102  Sotheby's International Realty   2.0    2.0   \n",
       "4   House for sale        94102                         Compass   4.0    3.0   \n",
       "5   House for sale        94102                         Compass   8.0    6.0   \n",
       "10  Condo for sale        94102                      Compass SF   2.0    2.0   \n",
       "11  Condo for sale        94102   Keller Williams San Francisco   2.0    1.0   \n",
       "\n",
       "    sq_feet      price  \n",
       "1    1155.0  1495000.0  \n",
       "4    4200.0  2500000.0  \n",
       "5    6330.0  3800000.0  \n",
       "10   1219.0  1199000.0  \n",
       "11    525.0   615000.0  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, let's deal with the NULL values.\n",
    "Since we want our model to be as accurate as possible, we'll drop the rows that have null values.\n",
    " We could use the mode, but that would mean suppositions from my part (I only mean this mor the 'provider' column), and I want the model to be very accurate.\n",
    " \n",
    "Also, 891 observations is plenty of data for this type of problem."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset = dataset[dataset['provider'].notna()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>postal_code</th>\n",
       "      <th>provider</th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>sq_feet</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Sotheby's International Realty</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1155.0</td>\n",
       "      <td>1495000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Compass</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4200.0</td>\n",
       "      <td>2500000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>House for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Compass</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6330.0</td>\n",
       "      <td>3800000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Compass SF</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1219.0</td>\n",
       "      <td>1199000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Condo for sale</td>\n",
       "      <td>94102</td>\n",
       "      <td>Keller Williams San Francisco</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>525.0</td>\n",
       "      <td>615000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             title  postal_code                        provider  beds  baths  \\\n",
       "1   Condo for sale        94102  Sotheby's International Realty   2.0    2.0   \n",
       "4   House for sale        94102                         Compass   4.0    3.0   \n",
       "5   House for sale        94102                         Compass   8.0    6.0   \n",
       "10  Condo for sale        94102                      Compass SF   2.0    2.0   \n",
       "11  Condo for sale        94102   Keller Williams San Francisco   2.0    1.0   \n",
       "\n",
       "    sq_feet      price  \n",
       "1    1155.0  1495000.0  \n",
       "4    4200.0  2500000.0  \n",
       "5    6330.0  3800000.0  \n",
       "10   1219.0  1199000.0  \n",
       "11    525.0   615000.0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we just import our dataset..."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
